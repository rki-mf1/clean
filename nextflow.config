manifest {
    mainScript = 'clean.nf'
    nextflowVersion = '>=21.04.0'
    defaultBranch = 'main'
}

// default parameters
params {
  max_cores = '24'
  cores = '8'
  max_memory = 24.GB
  memory = 8.GB
  help = false
  profile = false

  // input - reads
  input = ''
  input_type = '' // nano illumina illumina_single_end fasta pacbio
  list = false

  // parameters
  host = false
  own = false
  control = false
  keep = false
  rm_rrna = false
  bwa = false
  bbduk = false
  bbduk_kmer = 27
  bbduk_qin = 'auto'
  reads_rna = false
  min_clip = ''
  dcs_strict = false
  skip_qc = false

  // folder structure
  output = 'results'
  multiqc_dir = 'qc'
  nf_runinfo_dir = 'logs'

  // location for storing the conda or singularity environments
  condaCacheDir = 'conda'
  singularityCacheDir = 'singularity'

  // location for autodownload data like databases
  databases = 'nextflow-clean-autodownload'

  // softlink results instead of copying
  publish_dir_mode = 'copy' // use 'symlink' to just link the results

  // cleanup
  cleanup_work_dir = false
  no_intermediate = false
}

// see https://www.nextflow.io/docs/latest/config.html?highlight=cleanup#miscellaneous
cleanup = params.cleanup_work_dir

def trace_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
timeline {
  enabled = true
  file = "${params.output}/${params.nf_runinfo_dir}/execution_timeline_${trace_timestamp}.html"
}

report {
  enabled = true
  file = "${params.output}/${params.nf_runinfo_dir}/execution_report_${trace_timestamp}.html"
}

profiles {

    // executors
    local {
        executor {
            name = "local"
            cpus = params.max_cores
            memory = params.max_memory
        }
        params.cloudProcess = false
        includeConfig 'configs/local.config'
    }

    lsf {
        executor {
            name = "lsf"
            queueSize = 200
        }
        params.cloudProcess = true
        process.cache = "lenient"
        includeConfig 'configs/node.config'
    }

    slurm {
        executor {
            name = "slurm"
            queueSize = 200
        }
        params.cloudProcess = true
        process.cache = "lenient"
        includeConfig 'configs/node.config'
    }


    // engines
    docker {
        docker { enabled = true }
        includeConfig 'configs/container.config'
    }

    singularity {
        singularity {
                enabled = true
                autoMounts = true
                cacheDir = params.singularityCacheDir
                envWhitelist = "HTTPS_PROXY,HTTP_PROXY,http_proxy,https_proxy,FTP_PROXY,ftp_proxy"
        }
        includeConfig 'configs/container.config'
    }

    mamba {
        conda {
            enabled = true
            cacheDir = params.condaCacheDir
            useMamba = true
        }
        includeConfig 'configs/conda.config'
    }

    conda {
        conda {
            enabled = true
            cacheDir = params.condaCacheDir
        }
        includeConfig 'configs/conda.config'
    }

    // pre-merged
    standard {
        params.cloudProcess = false
        includeConfig 'configs/local.config'
        docker { enabled = true }
        includeConfig 'configs/container.config'
    }

    // cloud configs
    node {
        docker { enabled = true }
        includeConfig 'configs/container.config'
        includeConfig 'configs/node.config'
    }

    // CONFIGURE YOUR PRIVATE CLOUD
    gcloud {
        params.databases = 'gs://databases-matrice/databases/'
        bucketDir = 'gs://matrice/nextflow-tmp/clean'
        //workDir = "/tmp/nextflow-work-$USER"

        executor { name = 'google-lifesciences' }

        google {
            project = 'nextflow-auto-255816'
            zone = 'europe-west1-b'
        }

        params.cloudProcess = true
        includeConfig 'configs/node.config'

        docker { enabled = true }
        includeConfig 'configs/container.config'

        cloud { preemptible = true }

        // we need a docker also for basic functionalities in the cloud
        process {
            withLabel: noDocker { cpus = 1; memory = '4.0 GB'; container = 'nanozoo/template:3.8--ccd0653' }
        }
    }
}
